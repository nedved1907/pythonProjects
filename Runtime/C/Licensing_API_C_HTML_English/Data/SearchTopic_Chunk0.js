define({"0":{y:0,u:"../Licensing_API/Licensing_API_ref-c.htm",l:-1,t:"Sentinel Licensing API Reference",i:0.00363498936909855,a:"Sentinel Licensing API\nC Reference The Sentinel Licensing  API  reference contains the following \n sections: Overview of each of the functions that make up the Sentinel Licensing API Structural \n declarations and detailed information on individual Sentinel Licensing \n API functions Description \n of ..."},"1":{y:0,u:"../License_Manager/License_Managers_overview.htm",l:-1,t:"Sentinel License Manager",i:0.041599070096315,a:"Sentinel License Managers - Overview The Sentinel License Manager is a component of Sentinel LDK that is located on the machines where the protected application executes and where the protection key is located. The License Manager provides the protected application with information about the ..."},"2":{y:0,u:"../Licensing_API/Blinking_the_Sentinel_HL_Key_LED.htm",l:-1,t:"Blinking the Sentinel HL Key LED",i:0.00378211989118111,a:"This topic describes how you can implement functionality \n in your custom application to cause a Sentinel HL key (or HASP HL key) \n attached to a user’s computer to blink on and off. Overview In a situation where multiple Sentinel HL keys are attached \n to a computer, it may be convenient to cause ..."},"3":{y:0,u:"../Licensing_API/Other/Call_from_DllMain.htm",l:-1,t:"Calling Licensing API Functions From DllMain",i:0.00378211989118111,a:"In Windows and .Net, DLLs are loaded at run-time according to the order in which they were linked while building the application. During protection of the application or DLL with Sentinel LDK Envelope, the Licensing API is integrated into the protection application. The Licensing API sometimes calls ..."},"4":{y:0,u:"../Licensing_API/hasp_login.htm",l:-1,t:"Login Function",i:0.02611580587578,a:"Login  Function Description Logs into a Feature and thereby establishes a session \n context. Syntax hasp_status_t HASP_CALLCONV hasp_login(                 hasp_feature_t feature_id,                 hasp_vendor_code_t vendor_code,                 hasp_handle_t * handle) Parameters Return Values ..."},"5":{y:0,u:"../Licensing_API/hasp_login_scope.htm",l:-1,t:"LoginScope Function",i:0.0372873846831013,a:"LoginScope  Function Description Logs into a Feature to establish a session, according \n to predefined search parameters. Syntax hasp_status_t HASP_CALLCONV hasp_login_scope(               hasp_feature_t feature_id,               const char * scope,               hasp_vendor_code_t vendor_code, ..."},"6":{y:0,u:"../Licensing_API/hasp_logout.htm",l:-1,t:"hasp_logout()",i:0.00996395187954577,a:"Logout  Function Description Logs out from a context or session. Syntax hasp_status_t HASP_CALLCONV hasp_logout(                 hasp_handle_t handle                 ) Parameters Return Values HASP_STATUS_OK \n                             HASP_INV_HND \n                             HASP_LOCAL_COMM_ERR ..."},"7":{y:0,u:"../Licensing_API/hasp_encrypt.htm",l:-1,t:"Encrypt Function",i:0.013994744060989,a:"Encrypt  Function Description Encrypts a buffer. Syntax hasp_status_t HASP_CALLCONV hasp_encrypt(                 hasp_handle_t   handle, \t\tvoid * buffer, \t\thasp_size_t length                 ) Parameters Return Values HASP_STATUS_OK \n                             HASP_INV_HND \n                       ..."},"8":{y:0,u:"../Licensing_API/hasp_decrypt.htm",l:-1,t:"Decrypt Function",i:0.013994744060989,a:"Decrypt  Function Description Reverses the operation of the  Encrypt function applied on a data buffer, returning the data to its unencrypted \n state. Syntax hasp_status_t HASP_CALLCONV hasp_decrypt(             hasp_handle_t handle,             void * buffer,             hasp_size_t length ..."},"9":{y:0,u:"../Licensing_API/hasp_get_size.htm",l:-1,t:"GetSize Function",i:0.0148406251007035,a:"GetSize  Function Description Retrieves the byte size of a memory file from a Sentinel \n protection key. Syntax hasp_status_t HASP_CALLCONV hasp_get_size(         hasp_handle_t handle,         hasp_fileid_t fileid,         hasp_size_t * size         ) Parameters Return Values HASP_STATUS_OK \n        ..."},"10":{y:0,u:"../Licensing_API/hasp_read.htm",l:-1,t:"Read Function",i:0.0155972039159183,a:"Read  Function Description Retrieves content from a memory file in a Sentinel protection key. Syntax hasp_status_t HASP_CALLCONV hasp_read(                         hasp_handle_t handle,                        hasp_fileid_t fileid,                        hasp_size_t   offset, ..."},"11":{y:0,u:"../Licensing_API/hasp_write.htm",l:-1,t:"Write Function",i:0.0155972039159183,a:"Write  Function Description Writes to the memory of a Sentinel protection key. Syntax hasp_status_t HASP_CALLCONV hasp_write(                           hasp_handle_t handle,                           hasp_fileid_t fileid,                           hasp_size_t offset, ..."},"12":{y:0,u:"../Licensing_API/hasp_get_rtc.htm",l:-1,t:"hasp_get_rtc()",i:0.00930553642006494,a:"GetRtc  Function Description Reads the current time from: a Sentinel HL Time key a Sentinel HL NetTime key a Sentinel HL (Driverless configuration) key that supports V-Clock  (The function works for a Sentinel SL key, \n but reads the time from the computer\u0027s clock.) Syntax hasp_status_t ..."},"13":{y:0,u:"../Licensing_API/hasp_datetime_to_hasptime.htm",l:-1,t:"DatetimeToHasptime Function",i:0.0116591715115367,a:"DatetimeToHasptime \n Function Description Converts a date and time value to hasptime (the number \n of elapsed seconds since January 1 1970). Syntax hasp_status_t HASP_CALLCONV hasp_datetime_to_hasptime (         unsigned int  day,         unsigned int  month,         unsigned int  year, ..."},"14":{y:0,u:"../Licensing_API/hasp_hasptime_to_datetime.htm",l:-1,t:"HasptimeToDatetime Function",i:0.0185337292573079,a:"HasptimeToDatetime \n Function Description Converts a time value (elapsed seconds since January 1, \n 1970) into a date and time. Syntax hasp_status_t HASP_CALLCONV hasp_hasptime_to_datetime (           hasp_time_t time,           unsigned int *  day,           unsigned int *  month, ..."},"15":{y:0,u:"../Licensing_API/hasp_get_info.htm",l:-1,t:"GetInfo Function",i:0.056940964271443,a:"GetInfo  Function Description Retrieves \n information about system components, according to customizable search \n parameters, and presents it according to customizable formats. Syntax hasp_status_t HASP_CALLCONV hasp_get_info(                     const char * scope,                     const char * ..."},"16":{y:0,u:"../Licensing_API/hasp_get_sessioninfo.htm",l:-1,t:"hasp_get_sessioninfo()",i:0.0528910102528198,a:"GetSessionInfo  Function Description Retrieves information regarding a session context. Syntax hasp_status_t HASP_CALLCONV hasp_get_sessioninfo(         hasp_handle_t handle,         const char * format,         char ** info         ) Parameters Return Values HASP_STATUS_OK \n                         ..."},"17":{y:0,u:"../Licensing_API/hasp_update.htm",l:-1,t:"Update Function",i:0.0253028915847705,a:"Update  Function Description Write an update to a Sentinel protection key. Syntax hasp_status_t HASP_CALLCONV hasp_update (                 const char * update_data,                 char ** ack_data                 ) Parameters Return Values HASP_STATUS_OK \n                             HASP_OLD_LM  ..."},"18":{y:0,u:"../Licensing_API/hasp_transfer.htm",l:-1,t:"Transfer Function",i:0.0580315123260373,a:"Transfer  Function Description Transfers a license from a Sentinel SL key. This function \n supersedes the  Detach function. Syntax hasp_status_t HASP_CALLCONV hasp_transfer(                 const char *action,                 const char *scope,                 hasp_vendor_code_t vendor_code, ..."},"19":{y:0,u:"../Licensing_API/hasp_get_version.htm",l:-1,t:"GetVersion Function",i:0.00378211989118111,a:"GetVersion  Function Description Retrieves the version and build number of the Sentinel \n Licensing API library. Syntax hasp_status_t HASP_CALLCONV hasp_get_version(               unsigned int *major_version,               unsigned int *minor_version,\n              unsigned int *generation_version, ..."},"20":{y:0,u:"../Licensing_API/hasp_free.htm",l:-1,t:"Free Function",i:0.0349651766076095,a:"Description Releases memory resources utilized by other API functions. Syntax void HASP_CALLCONV hasp_free(char * info) Parameters Usage Notes Used only in C code to release memory resources allocated \n to the storage of retrieved data from API calls using the  GetInfo ,  GetSessionInfo  \n and  ..."},"21":{y:0,u:"../Licensing_API/Enumerations/Licensing_API_Status_Codes.htm",l:-1,t:"Licensing API Status Codes",i:0.0813119084237308,a:"Sentinel \n Licensing API Status Codes Below is a list of possible return codes related to the \n operation of the Sentinel Licensing API functions."},"22":{y:0,u:"../Licensing_XML_Tags/About_XML_tags.htm",l:-1,t:"About XML Tags",i:0.0386069815670263,a:"In certain Sentinel Licensing API functions, XML is used \n to define search parameters (Scope), \n and how retrieved data is displayed (Format). \n In addition, when certain functions are called, data is returned in XML \n format. This section provides information about the XML tags that \n can be used, ..."},"23":{y:0,u:"../Licensing_XML_Tags/Scope__XML_Tags.htm",l:-1,t:"Scope Input XML Tags",i:0.0453181116407753,a:" Scope Input XML Tags You use Scope XML tags to request \n information about the Sentinel LDK system, to specify a license that is \n to be transferred or detached, or to specify a Feature for the  LoginScope function. \n The table below describes all the XML elements that can be used. Refer to  Using ..."},"24":{y:0,u:"../Licensing_XML_Tags/Format_XML_tags.htm",l:-1,t:"Format XML Tags",i:0.0483924156749832,a:"When using the  GetInfo  \n and  GetSessionInfo  functions, \n you use XML tags  in the Format\n field to specify the data that should be retrieved by the function.  These  Format XML tags are also used by the function to label the retrieved information. The Format XML tags that you specify (and their ..."},"25":{y:0,u:"../Licensing_XML_Tags/Create_C2V_Format_Template.htm",l:-1,t:"Create C2V (\"updateinfo\") XML Tags",i:0.0138705122337171,a:"HASP_UPDATEINFO  (Create \n C2V) XML Tags You can request information in order to process updates with the   GetSessionInfo function by specifying one of the following: HASP_UPDATEINFO  predefined alias in the function call. \u003chaspformat root=\"updateinfo\"\u003e in the format parameter of the function call. ..."},"26":{y:0,u:"../Licensing_XML_Tags/HASP_TRANSFER_XML_Tags.htm",l:-1,t:"XML Tags for the Transfer Function",i:0.0188949025828263,a:"XML Tags for the  HASP_TRANSFER Function This topic describes the  Transfer function  XML tags that are \n used to: specify \n\t parameters for a  detachable \n\t license  or to  cancel  \n\t a detachable license. A detached license for a Product includes:\n Features in the Product that are defined as ..."},"27":{y:0,u:"../Licensing_XML_Tags/HASP_KEYINFO_XML_tags.htm",l:-1,t:"HASP_KEYINFO XML Tags",i:0.00637733122881244,a:"HASP_KEYINFO  \n XML Tags You can request information on the connected Sentinel protection key with the  GetSessionInfo function by specifying one of the following: HASP_KEYINFO  predefined alias in the function call. \u003chaspformat root=\"keyinfo\"\u003e in the format parameter of the function call. (For more ..."},"28":{y:0,u:"../Licensing_XML_Tags/HASP_FINGERPRINT_XML_tags.htm",l:-1,t:"HASP_FINGERPRINT XML Tags",i:0.00637733122881244,a:"HASP_FINGERPRINT  \n XML Tags You can request the fingerprint of a machine with the  GetInfo  function by specifying one of the following: HASP_FINGERPRINT  predefined alias in the function call. \u003chaspformat root=\"host_fingerprint\"\u003e in the format parameter of the function call. (For more information, ..."},"29":{y:0,u:"../Licensing_XML_Tags/HASP_SESSIONINFO_XML_tags.htm",l:-1,t:"HASP_SESSIONINFO XML Tags",i:0.00637733122881244,a:"HASP_SESSIONINFO  XML \n Tags You can request information on a specific login session with the  GetSessionInfo function by specifying one of the following: HASP_SESSIONINFO  predefined alias in the function call. \u003chaspformat root=\"sessioninfo\"\u003e in the format parameter of the function call. (For more ..."},"30":{y:0,u:"../Licensing_XML_Tags/XML_Samples.htm",l:-1,t:"XML Usage Samples",i:0.00856826168318391,a:"XML Usage Samples XML Usage Samples describes how to use XML tags to define the scope of searches for data, and to define the format of the data returned from such a search. Related Topics Using XML Tags to Define Scope Using XML Tags to Define Format"},"31":{y:0,u:"../Licensing_XML_Tags/Using_XML_Tags_to_Define_Scope.htm",l:-1,t:"Using XML Tags to Define Scope",i:0.0173969750725278,a:"Scope XML tags are used to define where the application \n is to search licenses when using the  LoginScope function. It is also used in the GetInfo function, to define from which objects information is to be gathered. Unlimited Searches The root tag for a Scope template is always \u003chaspscope\u003e. \n If ..."},"32":{y:0,u:"../Licensing_XML_Tags/Using_XML_Tags_to_Define_Format.htm",l:-1,t:"Using XML Tags to Define Format",i:0.021660989161589,a:"Format templates use XML tags to identify specific information \n that is to be extracted and the structure of its output when using the \n  GetInfo  or  GetSessionInfo function. Specifying the Output Root Tag The root tag for the Format XML that specified the information to retrieve is \u003chaspformat\u003e. ..."},"33":{y:0,u:"../Licensing_XML_Tags/Releasing_session_license.htm",l:-1,t:"Releasing an Identity-Based License",i:0.00913810572660199,a:"An end user who is assigned an identity-based license is typically granted the right to access that license from two or more machines, but only from a single machine at any given time. The user may face a situation in which they access their license from one machine (for example, their office ..."},"34":{y:0,u:"../Licensing_XML_Tags/Resolving_empty_fingerprint_issue.htm",l:-1,t:"Resolving an Empty Fingerprint Issue",i:0.0119047222690132,a:"Given the following situation: You call the  GetInfo  function in Sentinel Licensing API to fetch the fingerprint for an SL UserMode key. The fingerprint that is retrieved resembles the following: \u003c?xml version=\"1.0\" encoding=\"UTF-8\" ?\u003e \u003chasp_info\u003e    \u003chost_fingerprint type=\"SL-UserMode\" ..."},"35":{y:0,u:"../Licensing_XML_Tags/Checking_expiration_date.htm",l:-1,t:"Checking the License Expiration Date of a Feature",i:0.0190479362670143,a:"This topic is only relevant when the license type for a Feature is Expiration Date. By default, the license expiration date of a Feature in a protected application is only checked when the application logs in to the Feature. If the application is allowed to run continuously, the Feature can continue ..."},"36":{y:0,u:"../License_Manager/Selection_of_LM_under_Windows.htm",l:-1,t:"Selection of License Manager Under Windows",i:0.0368425132488545,a:"On a Windows platform, two or more  types of License Managers  may be available to a protected application. The application selects the License Manager based on the type and location of the protection key that contains the required license. This section describes the process by which the License ..."},"37":{y:0,u:"../Licensing_API/hasp_detach.htm",l:-1,t:"Detach Function",i:0.043674616962365,a:"Detach  Function This function \n is deprecated and has been replaced by the  Transfer function. Description Performs either of the following functions: Detaches a license \n\t for a Product from a Sentinel SL key (on the host machine), according \n\t to customizable parameters. Features defined as ..."},"38":{y:0,u:"../EULA2.htm",l:-1,t:"Copyrights and Trademarks",i:0.024233262460657,a:"This page provides in formation \n about the following topics: Copyrights and \n\t Trademarks End User \n\t License Agreement Copy rights and Trademarks Copyright © © 2021 Thales Group. All rights reserved.  Thales, the Thales logo and Sentinel are trademarks and service marks of Thales and/or its ..."},"39":{y:0,u:"../License_Manager/Types_of_LMs.htm",l:-1,t:"Types of License Managers",i:0.0331803032807139,a:"Several types of License Managers may by available to a protected application, depending on the platform used. The protected application selects the License Manager to use depending on  various circumstances . Integrated License Manager (Windows, Linux Intel, Linux ARM, Android) The Integrated ..."},"40":{y:0,u:"../License_Manager/Selection_of_LM_others.htm",l:-1,t:"Selection of License Manager (Others)",i:0.0258558833444326,a:"Selection of License Manager - Others Selection of License Manager for Protected Data Files Under Windows Selection of the License Manager for data files with licensing protection is determined by the location of the protected application or the Web browser that is used to access the data files, and ..."},"41":{y:0,u:"../Licensing_XML_Tags/XML_Tags_for_a_Sentinel_Protection_Key.htm",l:-1,t:"Using XML Tags to Indicate Type and Configuration of a Sentinel Protection Key",i:0.00773254048096032,a:"The following table describes \n how XML tags are used in various Licensing API functions to indicate the \n various types and configurations of Sentinel protection keys that are \n supported in Sentinel LDK. Related Topics About XML Tags Format XML Tags XML \n Usage Samples"},"42":{y:0,u:"../Support_contacts_info.htm",l:-1,t:"Support Contacts",i:0.00363498936909855,a:"You can contact us using any of the following options: Business Contacts To find the nearest office or distributor, go to:  https://cpl.thalesgroup.com/software-monetization/contact-us Support To obtain assistance in using Sentinel products ( ..."},});